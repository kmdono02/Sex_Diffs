ggplot(mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data, mapping=aes(y=pred_ss), alphpa=0.2)
names(pred_data)
names(gmm_pred_outcome_and_data)
View(gmm_pred_outcome_and_data)
gmm_pred_outcome_and_data$ID
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data[,-1], mapping=aes(y=pred_ss), alphpa=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
gmm_pred_outcome_and_data[,-1]
gmm_pred_outcome_and_data <- cbind(gmm_data, gmm_pred_outcome %>% select(-ID))
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss), alphpa=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, by=ID), alphpa=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
?geom_line
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alphpa=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alphpa=2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=ETA_Z, group=ID), alphpa=2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alphpa=2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alpha=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female"),
mapping=aes(x=AGE, y=ETA_Z, color=Sex, group=ID))+
geom_line()
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex, group=ID))+
geom_line()
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex, group=ID))+
geom_line(alpha=0.5)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex, group=ID))+
geom_line(mapping=aes(group=ID), alpha=0.5)+
geom_smooth(method="lm")
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(mapping=aes(group=ID), alpha=0.5)+
geom_smooth(method="lm", se=FALSE)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(mapping=aes(group=ID), alpha=0.25)+
geom_smooth(method="lm", se=FALSE)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
library(ggpubr)
plot_1 <- ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
## Predicted trends
plot_2 <- ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alpha=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggarrange(plotlist = list(plot_1, plot_2), nrow = 1)
plot_1 <- ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="loess", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
## Predicted trends
plot_2 <- ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alpha=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggarrange(plotlist = list(plot_1, plot_2), nrow = 1)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_smooth(method="lm", se=FALSE, mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
?geom_smooth
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_smooth(method="lm", se=FALSE, mapping=aes(group=ID, alpha=0.2))+
geom_smooth(method="lm", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_smooth(method="lm", se=FALSE, mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE, alpha=0.2)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z))+
geom_smooth(method="lm", se=FALSE, mapping=aes(group=ID), alpha=0.2)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat="smooth",method = "lm", mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE, alpha=0.2)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat="smooth",method = "lm", mapping=aes(group=ID), alpha=0.2)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
stat_smooth(stat="smooth",method = "lm", mapping=aes(group=ID), alpha=0.2)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat="smooth",method = "lm", mapping=aes(group=ID), alpha=0.2)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_smooth(method = "lm", se=FALSE, mapping=aes(group=ID), alpha=0.2)
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_smooth(method = "lm", se=FALSE, mapping=aes(group=ID))+
#geom_smooth(method="lm", se=FALSE, alpha=0.2)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method=lm, mapping=aes(group=ID))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method=lm, mapping=aes(x=AGE, y=ETA_Z, color=Sex, group=ID))+
#geom_smooth(method="lm", se=FALSE, alpha=0.2)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method=lm, mapping=aes(x=AGE, y=ETA_Z, color=Sex, group=ID))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method="lm", mapping=aes(x=AGE, y=ETA_Z, color=Sex, group=ID))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method="lm", mapping=aes(group=ID), alpha=0.3)+
#geom_smooth(method="lm", se=FALSE, alpha=0.2)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method="lm", mapping=aes(group=ID), alpha=0.3)+
#geom_smooth(method="lm", se=FALSE, alpha=0.2)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_y_continuous(limits=c(-1,3))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method="lm", mapping=aes(group=ID), alpha=0.3)+
#geom_smooth(method="lm", se=FALSE, alpha=0.2)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_y_continuous(limits=c(-2,4))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method="lm", mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_y_continuous(limits=c(-2,4))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
plot_1 <- ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method="lm", mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_y_continuous(limits=c(-2,4))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
## Predicted trends
plot_2 <- ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alpha=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggarrange(plotlist = list(plot_1, plot_2), nrow = 1)
plot_1 <- ggplot(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(x=AGE, y=ETA_Z, color=Sex))+
geom_line(stat = "smooth", method="lm", mapping=aes(group=ID), alpha=0.2)+
geom_smooth(method="lm", se=FALSE)+
labs(y="Eta", x="Age (months)")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_y_continuous(limits=c(-2,4))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
## Predicted trends
plot_2 <- ggplot(data=pred_data, mapping=aes(x=AGE, y=Ypred, color=Sex))+
geom_line(data=gmm_pred_outcome_and_data %>% mutate(Sex=ifelse(GNUM==0, "Male", "Female")),
mapping=aes(y=pred_ss, group=ID), alpha=0.2)+
geom_line(mapping=aes(linetype=class_char), size=1)+
geom_ribbon(mapping=aes(ymin = lower.Ypred, ymax = upper.Ypred, by=class, fill=Sex),
size=0.5, alpha=0.25, linetype=0)+
labs(y="Eta", x="Age (months)", linetype="Class")+
scale_color_manual(values=c("#E69F00", "#56B4E9"))+
scale_fill_manual(values=c("#E69F00", "#56B4E9"))+
scale_linetype_manual(values=c("solid", "dashed"))+
scale_y_continuous(limits=c(-2,4))+
theme_bw()+
theme(text = element_text(size=20))+
guides(linetype = guide_legend(override.aes = list(size = 0.5)))
ggarrange(plotlist = list(plot_1, plot_2), nrow = 1)
library(tidyverse)
library(dplyr)
library(aMNLFA)
library(MplusAutomation)
setwd('../mnlfa_results/rrb_files')
# Load data, group visit correctly
x_var_data_soc <- data.frame(read_csv("../../Data/x_var_data_soc.csv")) %>%
mutate(VNUM_2=ifelse(VNUM==6|VNUM==9, 6,
ifelse(VNUM==12|VNUM==15, 12, VNUM)))
x_var_data_rrb <- data.frame(read_csv("../../Data/x_var_data_rrb.csv")) %>%
mutate(VNUM_2=ifelse(VNUM==6|VNUM==9, 6,
ifelse(VNUM==12|VNUM==15, 12, VNUM)))
## Check visit grouping
ftable(x_var_data_soc$VNUM, x_var_data_soc$VNUM_2)
ftable(x_var_data_rrb$VNUM, x_var_data_rrb$VNUM_2)
## Extract domain items
items_soc <- names(x_var_data_soc)[-which(names(x_var_data_soc)%in% c("ID","AGE","VNUM","GNUM","GCHAR","IQMULL","DXV24", "DX_GNUM", "DX_AGE", "DXGENCHA",
"IQBIN", "DX_G1", "DX_G2", "DX_G3", "VNUM_2"))]
items_rrb <- names(x_var_data_rrb)[-which(names(x_var_data_rrb)%in% c("ID","AGE","VNUM","GNUM","GCHAR","IQMULL","DXV24", "DX_GNUM", "DX_AGE", "DXGENCHA",
"IQBIN", "DX_G1", "DX_G2", "DX_G3", "VNUM_2"))]
# Want to fit CFAs by age and sex
## Create objs to hold factor model fits and scores
cfa_fit <- list()
cfa_fit_data <- list()
cfa_fit_data_merge <- list()
## Extract unique time and sex values
timepoints <- unique(x_var_data_rrb$VNUM_2)
sex_vals <- unique(x_var_data_rrb$GCHAR)
for(i in 1:length(timepoints)){
cfa_fit[[i]] <- list()
cfa_fit_data[[i]] <- list()
## Define FA model based on items at given time point
if(timepoints[i]%in%c("6","12")){
formula_vars_timespecific <-
items_rrb[!grepl("QREPB",items_rrb)]
}else{
if(timepoints[i]%in%c("24","36")){
formula_vars_timespecific <-
items_rrb[!grepl("Q19|Q16",items_rrb)]
}else{
formula_vars_timespecific <- items_rrb
}
}
for(j in 1:length(sex_vals)){
## Extract only data for current time, sex
x_var_data_rrb_subset <- x_var_data_rrb %>% filter(VNUM_2==timepoints[i]&GCHAR==sex_vals[j])
## Create CFA model spec
efa_1fact_model_obj <-
paste0('#factor loadings \n ',
"rrbcfa","=~ ",paste0(formula_vars_timespecific,
collapse = " + "),
"\n #covariances")
## Fit CFA, extract scores
cfa_fit[[i]][[j]] <- cfa(efa_1fact_model_obj, data=x_var_data_rrb_subset, meanstructure=TRUE,
missing="fiml")
cfa_fit_data[[i]][[j]] <- cbind(x_var_data_rrb_subset, lavPredict(cfa_fit[[i]][[j]]))
}
## Bind all scores for given time point
cfa_fit_data_merge[[i]] <- do.call("rbind", cfa_fit_data[[i]])
}
## Bind all scores for entire factor data
cfa_fit_data_merge_final <- do.call("rbind", cfa_fit_data_merge) %>% arrange(ID, VNUM)
library(tidyverse)
library(dplyr)
library(lavaan)
# Load data, group visit correctly
x_var_data_soc <- data.frame(read_csv("../../Data/x_var_data_soc.csv")) %>%
mutate(VNUM_2=ifelse(VNUM==6|VNUM==9, 6,
ifelse(VNUM==12|VNUM==15, 12, VNUM)))
x_var_data_rrb <- data.frame(read_csv("../../Data/x_var_data_rrb.csv")) %>%
mutate(VNUM_2=ifelse(VNUM==6|VNUM==9, 6,
ifelse(VNUM==12|VNUM==15, 12, VNUM)))
## Check visit grouping
ftable(x_var_data_soc$VNUM, x_var_data_soc$VNUM_2)
ftable(x_var_data_rrb$VNUM, x_var_data_rrb$VNUM_2)
## Extract domain items
items_soc <- names(x_var_data_soc)[-which(names(x_var_data_soc)%in% c("ID","AGE","VNUM","GNUM","GCHAR","IQMULL","DXV24", "DX_GNUM", "DX_AGE", "DXGENCHA",
"IQBIN", "DX_G1", "DX_G2", "DX_G3", "VNUM_2"))]
items_rrb <- names(x_var_data_rrb)[-which(names(x_var_data_rrb)%in% c("ID","AGE","VNUM","GNUM","GCHAR","IQMULL","DXV24", "DX_GNUM", "DX_AGE", "DXGENCHA",
"IQBIN", "DX_G1", "DX_G2", "DX_G3", "VNUM_2"))]
# Want to fit CFAs by age and sex
## Create objs to hold factor model fits and scores
cfa_fit <- list()
cfa_fit_data <- list()
cfa_fit_data_merge <- list()
## Extract unique time and sex values
timepoints <- unique(x_var_data_rrb$VNUM_2)
sex_vals <- unique(x_var_data_rrb$GCHAR)
for(i in 1:length(timepoints)){
cfa_fit[[i]] <- list()
cfa_fit_data[[i]] <- list()
## Define FA model based on items at given time point
if(timepoints[i]%in%c("6","12")){
formula_vars_timespecific <-
items_rrb[!grepl("QREPB",items_rrb)]
}else{
if(timepoints[i]%in%c("24","36")){
formula_vars_timespecific <-
items_rrb[!grepl("Q19|Q16",items_rrb)]
}else{
formula_vars_timespecific <- items_rrb
}
}
for(j in 1:length(sex_vals)){
## Extract only data for current time, sex
x_var_data_rrb_subset <- x_var_data_rrb %>% filter(VNUM_2==timepoints[i]&GCHAR==sex_vals[j])
## Create CFA model spec
efa_1fact_model_obj <-
paste0('#factor loadings \n ',
"rrbcfa","=~ ",paste0(formula_vars_timespecific,
collapse = " + "),
"\n #covariances")
## Fit CFA, extract scores
cfa_fit[[i]][[j]] <- cfa(efa_1fact_model_obj, data=x_var_data_rrb_subset, meanstructure=TRUE,
missing="fiml")
cfa_fit_data[[i]][[j]] <- cbind(x_var_data_rrb_subset, lavPredict(cfa_fit[[i]][[j]]))
}
## Bind all scores for given time point
cfa_fit_data_merge[[i]] <- do.call("rbind", cfa_fit_data[[i]])
}
## Bind all scores for entire factor data
cfa_fit_data_merge_final <- do.call("rbind", cfa_fit_data_merge) %>% arrange(ID, VNUM)
View(cfa_fit_data_merge_final)
write_csv(x=cfa_fit_data_merge_final, file="../../cfa_results/rrb_files/cfa_scores_wdx.csv")
