knitr::opts_chunk$set(echo = TRUE)
load("Sex_Diff_LongData_6_27.RData")
load("Sex_Diff_WideData_6_27.RData")
#load("Sex_Diff_LongData_Old_6_27.RData")
#load("Sex_Diff_WideData_Old_6_27.RData")
library(tidyverse)
library(nlme)
library(kableExtra)
library(stats)
library(psych)
library(nFactors)
library(formula.tools)
library(ggpubr)
library(lavaan)
library(lavaanPlot)
library(DiagrammeR)
#library(Rgraphviz)
library(multiplex)
library(RColorBrewer)
library(lcmm)
library(gtsummary)
library(flextable)
# dataset_long <- dataset_long_old %>%
#   mutate(visit_num = as.numeric(gsub("V","",Visit)))
dataset_long <- dataset_long %>%
mutate(visit_num = as.numeric(gsub("V","",Visit)))
# Create time-specific social and RRB composites using means
dataset_long_explore <-
dataset_long %>%
mutate(social_factor =
ifelse(visit_num==6|visit_num==9|visit_num==12|visit_num==15,
(aosi_q8_eye_contact+aosi_q3_orients_to_name_score+
aosi_q14_social_interest_recode+
aosi_q21_social_referencing+
aosi_q5_anticipatory_response_score_recode+
aosi_q9_reciprocal_social_smile_recode)/6,
ifelse(visit_num==24|visit_num==36,
(ADOS_Comb_EC+ADOS_Comb_RespName+ADOS_Comb_ShEnj+ADOS_Comb_Show+
ADOS_Comb_QSO+ADOS_Comb_Point+ADOS_Comb_Face)/8, NA)),
rrb_factor=
ifelse(visit_num==6|visit_num==9|visit_num==12|visit_num==15,
(aosi_q10_coordination_of_eye_gaze_and_action_recode+
aosi_q17_atypical_motor+
aosi_q18_atypical_sensory+aosi_q19_engagement_of_attention+
aosi_q16_motor_control_and_behaviour)/5,
ifelse(visit_num==24|visit_num==36,
(ADOS_Comb_HFMann+ADOS_Comb_SensInt+ADOS_Comb_RepBeh)/3, NA)))
# Now plot
ggplot(dataset_long_explore,
mapping=aes(x=visit_num, y=social_factor, color=V24_Group, linetype=Gender_Dummy))+
geom_point(position = position_dodge2(width = 0.75), size=2.5)+
geom_smooth(method="lm", size=2.5)+
xlab("Visit (months)")+
ylab("Mean social score")+
labs(color="24 month group",
linetype="Sex")+
theme_bw()+
theme(text = element_text(size=30))
ggsave(filename = "Plots_Tables/explore_social_means.jpg", limitsize = FALSE,
scale=2.5)
ggplot(dataset_long_explore %>% filter(visit_num!=36),
mapping=aes(x=visit_num, y=rrb_factor, color=V24_Group, linetype=Gender_Dummy))+
geom_point(position = position_dodge2(width = 0.75), size=2.5)+
geom_smooth(method="lm", size=2.5)+
xlab("Visit (months)")+
ylab("Mean RRB score")+
labs(color="24 month group",
linetype="Sex")+
theme_bw()+
theme(text = element_text(size=30))
ggsave(filename = "Plots_Tables/explore_rrb_means.jpg", limitsize = FALSE,
scale=2.5)
# Add composite, overlapping variables to dataset
dataset_long_wcomps <- dataset_long %>%
mutate(EYEC = ifelse(visit_num%in%c(6,9,12,15),
aosi_q8_eye_contact,ADOS_Comb_EC),
RNAME = ifelse(visit_num%in%c(6,9,12,15),
aosi_q3_orients_to_name_score,
ADOS_Comb_RespName),
SOCINT = ifelse(visit_num%in%c(6,9,12,15),
aosi_q14_social_interest_recode,
ADOS_Comb_ShEnj),
SOCREF = ifelse(visit_num%in%c(6,9,12,15),aosi_q21_social_referencing,
ADOS_Comb_SIJA),
MOTOR = ifelse(visit_num%in%c(6,9,12,15),aosi_q17_atypical_motor,
ADOS_Comb_HFMann),
SENS = ifelse(visit_num%in%c(6,9,12,15),aosi_q18_atypical_sensory,
ADOS_Comb_SensInt))
harmonized_vars <- c("EYEC","RNAME","SOCINT","SOCREF","MOTOR","SENS")
# List of formulas
formula_list <-
list(~EYEC+RNAME+SOCINT+SOCREF+ADOS_Comb_Show+ADOS_Comb_QSO+
aosi_q5_anticipatory_response_score_recode+
aosi_q9_reciprocal_social_smile_recode,
~MOTOR+SENS+ADOS_Comb_RepBeh+aosi_q19_engagement_of_attention+
aosi_q16_motor_control_and_behaviour)
path_list <-
c("all_social",
"all_rrb")
# Create numeric ID variable and gender variable
ids_num <- dataset_long_wcomps %>%
select(Identifiers) %>%
unique() %>%
dim()
dataset_long_numids <-
data.frame(dataset_long_wcomps %>%
select(Identifiers) %>%
unique(),
"num_ids"=1:(ids_num[1]))
# Save to match back to OG ids
write_csv(dataset_long_numids, file="Docs/num_ids_og_ids_key.csv")
dataset_long_nums_all <-
dataset_long_wcomps %>%
merge(dataset_long_numids) %>%
mutate(V24_Dx=ifelse(V24_Group=="ASD", "ASD",
ifelse(V24_Group%in%c("Atypical","Typical"), "Negative", NA)),
V24_Dx_num=ifelse(V24_Dx=="ASD",1,
ifelse(V24_Dx=="Negative",0,NA)),
gender_num=ifelse(Gender_Dummy=="female", 1,
ifelse(Gender_Dummy=="male",0,NA)),
V36_Dx=ifelse(V36_ASD_dummy==c("Atypical","Typical"), 0,
ifelse(V36_ASD_dummy=="ASD",1,NA)),
#V36_Dx=ifelse(V36_Dx==c("Atypical","Typical"), 0,
#ifelse(V36_Dx=="ASD",1,NA)),
IQBIN = ifelse(mullen_composite_standard_score<
median(mullen_composite_standard_score,
na.rm = TRUE), 0,
ifelse(is.na(mullen_composite_standard_score)==1, NA,
1)),
DX_AGE=V24_Dx_num*Candidate_Age,
DX_GNUM=V24_Dx_num*gender_num,
DXGENCHA=ifelse(Gender_Dummy=="male"&V24_Dx=="ASD","male_ASD",
ifelse(Gender_Dummy=="male"&V24_Dx=="Negative","male_negative",
ifelse(Gender_Dummy=="female"&V24_Dx=="ASD","female_ASD",
ifelse(Gender_Dummy=="female"&V24_Dx=="Negative","female_negative",NA))))) %>%
select(Identifiers, num_ids, Visit, visit_num, Gender_Dummy, gender_num,
everything()) %>%
rename(c("ID"="num_ids", "VNUM"="visit_num","GNUM"="gender_num",
"GCHAR"="Gender_Dummy",
"IQMULL"="mullen_composite_standard_score",
"DXV24"="V24_Dx_num")) #%>%
#filter(Risk_dummy=="HR")
# Save dataset for summ stats
save(dataset_long_nums_all, file = "Data/fa_data_hr_lr.RData")
## Start loop
data_subset <- c("whole", "female", "male")
timepoints <- c("all", "6", "12", "24", "36")
iq_threshold <- "all"
# other IQ thresholds used: 85, median(dataset_long_nums$IQMULL, na.rm=TRUE)
efa_scree_plots <- list()
efa_1fact_fit <- list()
efa_1_plots <- list()
efa_1_full_plots <- list()
# # Run for both LR and HR
#risk_vals <- levels(dataset_long_nums_all$Risk_dummy)
# NOTE: can't run CFAs in LR group at certain time points due to 0 variability in some items in the RRB domain
risk_vals <- "HR"
# Add composite, overlapping variables to dataset
dataset_long_wcomps <- dataset_long %>%
mutate(EYEC = ifelse(visit_num%in%c(6,9,12,15),
aosi_q8_eye_contact,ADOS_Comb_EC),
RNAME = ifelse(visit_num%in%c(6,9,12,15),
aosi_q3_orients_to_name_score,
ADOS_Comb_RespName),
SOCINT = ifelse(visit_num%in%c(6,9,12,15),
aosi_q14_social_interest_recode,
ADOS_Comb_ShEnj),
SOCREF = ifelse(visit_num%in%c(6,9,12,15),aosi_q21_social_referencing,
ADOS_Comb_SIJA),
MOTOR = ifelse(visit_num%in%c(6,9,12,15),aosi_q17_atypical_motor,
ADOS_Comb_HFMann),
SENS = ifelse(visit_num%in%c(6,9,12,15),aosi_q18_atypical_sensory,
ADOS_Comb_SensInt))
harmonized_vars <- c("EYEC","RNAME","SOCINT","SOCREF","MOTOR","SENS")
# List of formulas
formula_list <-
list(~EYEC+RNAME+SOCINT+SOCREF+ADOS_Comb_Show+ADOS_Comb_QSO+
aosi_q5_anticipatory_response_score_recode+
aosi_q9_reciprocal_social_smile_recode,
~MOTOR+SENS+ADOS_Comb_RepBeh+aosi_q19_engagement_of_attention+
aosi_q16_motor_control_and_behaviour)
path_list <-
c("all_social",
"all_rrb")
# Create numeric ID variable and gender variable
ids_num <- dataset_long_wcomps %>%
select(Identifiers) %>%
unique() %>%
dim()
dataset_long_numids <-
data.frame(dataset_long_wcomps %>%
select(Identifiers) %>%
unique(),
"num_ids"=1:(ids_num[1]))
# Save to match back to OG ids
write_csv(dataset_long_numids, file="Docs/num_ids_og_ids_key.csv")
dataset_long_nums_all <-
dataset_long_wcomps %>%
merge(dataset_long_numids) %>%
mutate(V24_Dx=ifelse(V24_Group=="ASD", "ASD",
ifelse(V24_Group%in%c("Atypical","Typical"), "Negative", NA)),
V24_Dx_num=ifelse(V24_Dx=="ASD",1,
ifelse(V24_Dx=="Negative",0,NA)),
gender_num=ifelse(Gender_Dummy=="female", 1,
ifelse(Gender_Dummy=="male",0,NA)),
V36_Dx=ifelse(V36_ASD_dummy==c("Atypical","Typical"), 0,
ifelse(V36_ASD_dummy=="ASD",1,NA)),
#V36_Dx=ifelse(V36_Dx==c("Atypical","Typical"), 0,
#ifelse(V36_Dx=="ASD",1,NA)),
IQBIN = ifelse(mullen_composite_standard_score<
median(mullen_composite_standard_score,
na.rm = TRUE), 0,
ifelse(is.na(mullen_composite_standard_score)==1, NA,
1)),
DX_AGE=V24_Dx_num*Candidate_Age,
DX_GNUM=V24_Dx_num*gender_num,
DXGENCHA=ifelse(Gender_Dummy=="male"&V24_Dx=="ASD","male_ASD",
ifelse(Gender_Dummy=="male"&V24_Dx=="Negative","male_negative",
ifelse(Gender_Dummy=="female"&V24_Dx=="ASD","female_ASD",
ifelse(Gender_Dummy=="female"&V24_Dx=="Negative","female_negative",NA))))) %>%
select(Identifiers, num_ids, Visit, visit_num, Gender_Dummy, gender_num,
everything()) %>%
rename(c("ID"="num_ids", "VNUM"="visit_num","GNUM"="gender_num",
"GCHAR"="Gender_Dummy",
"IQMULL"="mullen_composite_standard_score",
"DXV24"="V24_Dx_num")) #%>%
#filter(Risk_dummy=="HR")
# Save dataset for summ stats
save(dataset_long_nums_all, file = "Data/fa_data_hr_lr.RData")
## Start loop
data_subset <- c("whole", "female", "male")
timepoints <- c("all", "6", "12", "24", "36")
iq_threshold <- "all"
# other IQ thresholds used: 85, median(dataset_long_nums$IQMULL, na.rm=TRUE)
efa_scree_plots <- list()
efa_1fact_fit <- list()
efa_1_plots <- list()
efa_1_full_plots <- list()
# # Run for both LR and HR
#risk_vals <- levels(dataset_long_nums_all$Risk_dummy)
# NOTE: can't run CFAs in LR group at certain time points due to 0 variability in some items in the RRB domain
risk_vals <- "HR"
i=1
formula_select <- formula_list[[i]]
formula_vars <- formula.tools::rhs.vars(formula_select)
x_vars <- c("ID", "VNUM", "GNUM", "GCHAR", "IQMULL", "DXV24", "DX_AGE",
"DX_GNUM", "DXGENCHA", "IQBIN", formula_vars)
dataset_long_nums <- dataset_long_nums_all %>%
filter(Risk_dummy=="HR") %>%
filter(is.na(DXGENCHA)==0) %>%
filter(eval(parse(text=
paste0("!(",
paste0("is.na(",c(formula_vars),")==1",
collapse = "&"),
")")
)
)
)
x_var_data <- dataset_long_nums %>%
select(x_vars)
names(x_var_data)
formula_select <- formula_list[[i]]
formula_vars <- formula.tools::rhs.vars(formula_select)
x_vars <- c("ID", "VNUM", "GNUM", "GCHAR", "IQMULL", "DXV24", "DX_AGE",
"DX_GNUM", "DXGENCHA", "IQBIN", formula_vars)
dataset_long_nums <- dataset_long_nums_all %>%
filter(Risk_dummy=="HR") %>%
filter(is.na(DXGENCHA)==0) %>%
filter(eval(parse(text=
paste0("!(",
paste0("is.na(",c(formula_vars),")==1",
collapse = "&"),
")")
)
)
)
x_var_data <- dataset_long_nums %>%
select(c("VNUM", "Candidate_Age", x_vars)) %>%
plyr::rename(c("Candidate_Age"="AGE")) %>%
data.frame()
names(x_var_data)[grepl("aosi",names(x_var_data))] <-
lapply(str_split(names(x_var_data)[grepl("aosi",names(x_var_data))],"_"),
function(x){paste(x[c(1,2)], collapse = "")}) %>%
toupper()
names(x_var_data) <- str_replace(names(x_var_data), "AOSI", "")
names(x_var_data)[grepl("ADOS",names(x_var_data))] <-
substr(x=lapply(str_split(names(x_var_data)[grepl("ADOS",
names(x_var_data))],"_"),
function(x){paste(x[c(1,3)], collapse = "")}) %>%
toupper(), start = 1, stop=8)
names(x_var_data) <-
substr(str_replace(names(x_var_data), "ADOS", "Q"), start=1, stop=8)
# Create 3 binary variables to represent ASD*Sex interaction
x_var_data <- x_var_data %>%
mutate(DX_G1=ifelse(DXGENCHA=="female_ASD",1,
ifelse(is.na(DXGENCHA)==1, NA, 0)),
DX_G2=ifelse(DXGENCHA=="male_negative",1,
ifelse(is.na(DXGENCHA)==1, NA, 0)),
DX_G3=ifelse(DXGENCHA=="male_ASD",1,
ifelse(is.na(DXGENCHA)==1, NA, 0)))
names(x_var_data)
names(dataset_long_nums)
formula_select
path_list
dim(x_var_data)
test_dat <- read_csv("Data/x_var_data_rrb.csv")
dim(test_data)
dim(test_dat)
names(test_dat)
test_dat <- read_csv("Data/x_var_data_soc.csv")
dim(test_dat)
i=2
formula_select <- formula_list[[i]]
formula_vars <- formula.tools::rhs.vars(formula_select)
x_vars <- c("ID", "VNUM", "GNUM", "GCHAR", "IQMULL", "DXV24", "DX_AGE",
"DX_GNUM", "DXGENCHA", "IQBIN", formula_vars)
# Only keep those with 1) HR status; 2) non-missing 24 month diagnosis, sex
# 3) at least 1 item at a given time point
dataset_long_nums <- dataset_long_nums_all %>%
filter(Risk_dummy=="HR") %>%
filter(is.na(DXGENCHA)==0) %>%
filter(eval(parse(text=
paste0("!(",
paste0("is.na(",c(formula_vars),")==1",
collapse = "&"),
")")
)
)
)
# Subset data to only include variables of interest
x_var_data <- dataset_long_nums %>%
select(c("VNUM", "Candidate_Age", x_vars)) %>%
plyr::rename(c("Candidate_Age"="AGE")) %>%
data.frame()
# Change non-harmonized ADOS and AOSI variable names (too long for MPlus)
names(x_var_data)[grepl("aosi",names(x_var_data))] <-
lapply(str_split(names(x_var_data)[grepl("aosi",names(x_var_data))],"_"),
function(x){paste(x[c(1,2)], collapse = "")}) %>%
toupper()
names(x_var_data) <- str_replace(names(x_var_data), "AOSI", "")
names(x_var_data)[grepl("ADOS",names(x_var_data))] <-
substr(x=lapply(str_split(names(x_var_data)[grepl("ADOS",
names(x_var_data))],"_"),
function(x){paste(x[c(1,3)], collapse = "")}) %>%
toupper(), start = 1, stop=8)
names(x_var_data) <-
substr(str_replace(names(x_var_data), "ADOS", "Q"), start=1, stop=8)
# Create 3 binary variables to represent ASD*Sex interaction (not used in the end)
x_var_data <- x_var_data %>%
mutate(DX_G1=ifelse(DXGENCHA=="female_ASD",1,
ifelse(is.na(DXGENCHA)==1, NA, 0)),
DX_G2=ifelse(DXGENCHA=="male_negative",1,
ifelse(is.na(DXGENCHA)==1, NA, 0)),
DX_G3=ifelse(DXGENCHA=="male_ASD",1,
ifelse(is.na(DXGENCHA)==1, NA, 0)))
dim(x_var_data)
